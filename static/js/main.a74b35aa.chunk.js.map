{"version":3,"sources":["components/table.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["columns","name","label","options","sort","DataTable","React","useState","isOpen","factModalState","setFactModalState","inventorsData","useMemo","inventorsJson","inventors","map","invntr","id","firstName","first","lastName","last","year","knownFor","known_for","funFact","fun_fact","handleModalClose","aria-labelledby","title","data","download","onRowClick","rowData","inventor","find","print","selectableRows","sortOrder","direction","tableId","Dialog","open","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ovGAaaA,EAAU,CACrB,CACEC,KAAM,YACNC,MAAO,cAET,CACED,KAAM,WACNC,MAAO,aAET,CACED,KAAM,OACNC,MAAO,QAET,CACED,KAAM,WACNC,MAAO,YACPC,QAAS,CACPC,MAAM,KAKCC,EAAY,WAAO,IAAD,QACeC,IAAMC,SAA6C,CAAEC,QAAQ,IAD5E,mBACtBC,EADsB,KACNC,EADM,KAEvBC,EAAgBL,IAAMM,SAAsB,kBAAMC,EAAcC,UAAUC,KAAI,SAAAC,GAAM,MAAK,CAC7FC,GAAID,EAAOC,GACXC,UAAWF,EAAOG,MAClBC,SAAUJ,EAAOK,KACjBC,KAAMN,EAAOM,KACbC,SAAUP,EAAOQ,UACjBC,QAAST,EAAOU,eACb,IAGCC,EAAmB,kBAAMjB,EAAkB,CAAEF,QAAQ,KAE3D,OACE,qCACE,oBAAIS,GAAG,wBAAP,kCACA,qBAAKA,GAAG,kBAAkBW,kBAAgB,wBAA1C,SACE,cAAC,IAAD,CACEC,MAAM,GACNC,KAAMnB,EACNX,QAASA,EACTG,QAAS,CACP4B,UAAU,EACVC,WAba,SAACC,GAAD,OAAuBvB,EAAkB,CAAEF,QAAQ,EAAM0B,SAAUvB,EAAcwB,MAAK,SAAAnB,GAAM,OAAIA,EAAOE,YAAce,EAAQ,SAc1IG,OAAO,EACPC,eAAgB,OAChBC,UAAW,CAAErC,KAAM,OAAQsC,UAAW,OACtCC,QAAS,uBAId/B,EAAeD,QACd,eAACiC,EAAA,EAAD,CAAQC,MAAM,EAAMC,QAAShB,EAAkBC,kBAAgB,wBAA/D,UACE,cAACgB,EAAA,EAAD,CAAa3B,GAAG,wBAAhB,4BACA,cAAC4B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,4BAAG,qCAAIrC,QAAJ,IAAIA,GAAJ,UAAIA,EAAgByB,gBAApB,aAAI,EAA0BhB,UAA9B,cAA+CT,QAA/C,IAA+CA,GAA/C,UAA+CA,EAAgByB,gBAA/D,aAA+C,EAA0Bd,cAC5E,mCAAIX,QAAJ,IAAIA,GAAJ,UAAIA,EAAgByB,gBAApB,aAAI,EAA0BT,eAGlC,cAACsB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,QAAStB,EAAjB,iCClEGuB,MARf,WACE,OACE,qBAAKjC,GAAG,MAAR,SACE,cAAC,EAAD,OCQSkC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a74b35aa.chunk.js","sourcesContent":["import React from 'react';\nimport MuiDataTable from \"mui-datatables\";\nimport inventorsJson from \"../data/inventors.json\";\nimport Button from '@material-ui/core/Button';\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\n\ntype UiInventor = { id: number, firstName: string, funFact: string, knownFor: string[], lastName: string, year: number };\ntype OpenModalState = { isOpen: true, inventor?: UiInventor };\n\nexport const columns = [\n  {\n    name: \"firstName\",\n    label: \"First Name\",\n  },\n  {\n    name: \"lastName\",\n    label: \"Last Name\",\n  },\n  {\n    name: \"year\",\n    label: \"Year\",\n  },\n  {\n    name: \"knownFor\",\n    label: \"Known For\",\n    options: {\n      sort: false\n    }\n  }\n];\n\nexport const DataTable = () => {\n  const [factModalState, setFactModalState] = React.useState<{ isOpen: false } | OpenModalState>({ isOpen: false });\n  const inventorsData = React.useMemo<UiInventor[]>(() => inventorsJson.inventors.map(invntr => ({\n    id: invntr.id,\n    firstName: invntr.first,\n    lastName: invntr.last,\n    year: invntr.year,\n    knownFor: invntr.known_for,\n    funFact: invntr.fun_fact\n  })), [])\n\n  const handleRowClick = (rowData: string[]) => setFactModalState({ isOpen: true, inventor: inventorsData.find(invntr => invntr.firstName === rowData[0]) });\n  const handleModalClose = () => setFactModalState({ isOpen: false })\n\n  return (\n    <>\n      <h3 id=\"inventors-table-title\">Well-known Inventors</h3>\n      <div id=\"table-container\" aria-labelledby=\"inventors-table-title\">\n        <MuiDataTable\n          title=\"\"\n          data={inventorsData}\n          columns={columns}\n          options={{\n            download: false,\n            onRowClick: handleRowClick,\n            print: false,\n            selectableRows: \"none\",\n            sortOrder: { name: \"year\", direction: \"asc\" },\n            tableId: \"inventors-table\"\n          }}\n        />\n      </div>\n      {factModalState.isOpen && (\n        <Dialog open={true} onClose={handleModalClose} aria-labelledby=\"fun-fact-dialog-title\">\n          <DialogTitle id=\"fun-fact-dialog-title\">Did you know??</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              <p><b>{factModalState?.inventor?.firstName}&nbsp;{factModalState?.inventor?.lastName}</b></p>\n              <p>{factModalState?.inventor?.funFact}</p>\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleModalClose}>Ok, got it</Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </>\n  );\n}\n","import '../styles/App.css';\nimport { DataTable } from \"./table\"\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <DataTable />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}